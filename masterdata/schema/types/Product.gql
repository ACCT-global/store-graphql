type Product {
  productId: ID
  productName: String
  brand: String
  linkText: String
  productReference: String
  categoryId: ID
  categories: [String]
  categoriesIds: [String]
  link: String
  description: String
  items: [SKU]
  properties: [Property] @resolve
  recommendations: Recommendation @resolve
  # TODO
  # clusterHighlights
  # Caracter√≠sticas
  # specification groups
}

type Seller {
  sellerId: ID
  sellerName: String
  addToCartLink: String
  sellerDefault: Boolean
  commertialOffer: Offer
}

type Recommendation {
  buy: [Product]
  view: [Product]
}

type SKU {
  itemId: ID
  name: String
  nameComplete: String
  complementName: String
  ean: String
  referenceId: [Reference]
  measurementUnit: String
  unitMultiplier: Float
  images: [Image]
  sellers: [Seller]
  variations: [String]
  attachments: [Attachment]
  # TODO
  # modalType
  # attachments
}

type Attachment {
  id: ID
  name: String
  required: Boolean
  domainValues: [DomainValues] @resolve
}

type DomainValues {
  FieldName: String
  MaxCaracters: String
  DomainValues: String
}

type Offer {
  Installments: [Installment]
  Price: Float
  ListPrice: Float
  PriceWithoutDiscount: Float
  RewardValue: Float
  PriceValidUntil: String
  AvailableQuantity: Float
  Tax: Float
  CacheVersionUsedToCallCheckout: String

  # TODO
  # DeliverySlaSamplesPerRegion
  # DeliverySlaSamples
  # DiscountHighlight
  # GiftSkuIds
  # Teasers
  # BuyTogether
}

type Image {
  imageId: ID
  imageLabel: String
  imageTag: String
  imageUrl: String
  imageText: String
}

type Property {
  name: String
  values: [String]
}

type Installment {
  Value: Float
  InterestRate: Float
  TotalValuePlusInterestRate: Float
  NumberOfInstallments: Int
  PaymentSystemName: String
  PaymentSystemGroupName: String
  Name: String
}

type Reference {
  Key: String
  Value: String
}
