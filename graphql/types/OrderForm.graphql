type OrderForm {
  """ orderFormId is used as cacheId """
  cacheId: ID
  orderFormId: String
  value: Float
  items: [OrderFormItem]
  salesChannel: String
  loggedIn: Boolean
  isCheckedIn: Boolean
  storeId: String
  allowManualPrice: Boolean
  canEditData: Boolean
  userProfileId: String
  userType: String
  ignoreProfileData: Boolean
  totalizers: [Totalizer]
  clientProfileData: ClientProfile
  shippingData: OrderFormShippingData
  receiverUri: String
  gatewayCallbackTemplatePath: String
  orderId: String
  merchantTransactions: [MerchantTransaction]
  paymentData: PaymentData
}

type PaymentData {
  payments: [PaymentDataPayment]
}

type PaymentDataPayment {
  paymentSystem: String
  bin: String
  accountId: String
  tokenId: String
  installments: Int
  referenceValue: Float
  value: Float
  merchantSellerPayments: [MerchantSellerPayment]
}

type MerchantSellerPayment {
  id: String
  installments: Int
  referenceValue: Float
  value: Float
  interestRate: Float
  installmentValue: Float
}

type MerchantTransaction {
  id: String
  transactionId: String
  merchantName: String
  payments: [MerchantTransactionPayment]
}

type MerchantTransactionPayment {
  paymentSystem: String
  bin: String
  accountId: String
  tokenId: String
  value: Float
  referenceValue: Float
  giftCardRedemptionCode: String
  giftCardProvider: String
  giftCardId: String
}

type OrderFormItem {
  id: ID
  name: String
  detailUrl: String
  imageUrl: String
  skuName: String
  quantity: Float
  uniqueId: String
  productId: String
  refId: String
  ean: String
  priceValidUntil: String
  price: Float
  tax: Int
  listPrice: Float
  sellingPrice: Float
  rewardValue: Int
  isGift: Boolean
  seller: String
}

type Totalizer {
  id: ID
  name: String
  value: Float
}

type ClientProfile {
  email: String
  firstName: String
  lastName: String
  phone: String
  isCorporate: Boolean
  corporateDocument: String
  corporateName: String
  corporatePhone: String
  document: String
  documentType: String
  stateInscription: String
  tradeName: String
}

type OrderFormShippingData {
  address: Address
  availableAddresses: [Address]!
  selectedAddresses: [Address]!
}

input OrderFormItemInput {
  id: Int
  index: Int
  quantity: Int
  seller: Int
}

input OrderFormAddressInput {
  addressId: String
  addressType: String
  postalCode: String
  """ example: BRA """
  country: String
  receiverName: String
  city: String
  """ example: RJ """
  state: String
  street: String
  number: String
  complement: String
  neighborhood: String
}

input OrderFormPaymentInput {
  accountId: String
  bin: String
  group: String
  hasDefaultBillingAddress: Boolean
  installments: Int
  installmentsValue: Int
  installmentsInterestRate: Float
  merchantSellerPayments: [MerchantSellerPaymentInput]
  paymentSystem: String
  paymentSystemName: String
  referenceValue: Float
  tokenId: String
  value: Float
}

input MerchantSellerPaymentInput {
  id: String
  installmentValue: Float
  installments: Int
  interestRate: Float
  referenceValue: Float
  value: Float
}

input OrderFormProfileInput {
  email: String
  isCorporate: Boolean
  """ example: CNPJ """
  corporateDocument: String
  corporateName: String
  corporatePhone: String
  document: String
  """ example: CPF """
  documentType: String
  firstName: String
  lastName: String
  phone: String
  stateInscription: String
  """ nome fantasia """
  tradeName: String
}

input TransactionInput {
  interestValue: Int
  optinNewsLetter: Boolean
  referenceId: String
  referenceValue: Float
  savePersonalData: Boolean
  value: Float
}

input OrderFormPaymentTokenInput {
  tokenId: String
  cardNumber: String
  bin: String
  paymentSystem: String
  paymentSystemName: String
}
